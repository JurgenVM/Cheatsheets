# Basic commands
| Command							| Meaning
| :---								| :---
| `cls` & `Clear-Host`				| clear the screen
| `cd`								| change directory
| `cd\` 							| go to root directory
| `dir` & `ls` & `Get-Childitem` 	| shows whats in the directory
| `cat` & `Get-Content`				| output the file
| `Copy` & `cp` & `Copy-Item`		| copy the file

# Help system
| Command								| Meaning
| :---									| :---
| `Update-Help -Force`					| Update the help
| `Save-Help`							| Save the help to a local file
| `man`									| Scrollable
| `help`								| Alias
| `Get-Help "*keyword*"` 				| Get help
| `Get-Help Get-*` 						| Get all commands which start with "Get-"
| `Get-Help`							| `-ShowWindow`
| 										| `-Detailed`
|										| `-Examples`
| 										| `-Full`
| 										| `-Online`
| 										| `-ShowCommand`
| `Get-Help -Category Provider`			|
| `Get-verb`							| Get the verbs used in PowerShell
| `Get-Alias -Definition get-process` 	| Get all aliases for `Get-Process`
| `Get-Help About_*`					| Get all the about topics
| `Get-Process | Get-Member`			| Get all the methods, properties,... of the object

# Export

| Command			| Meaning
| :---				| :---
| `Export-csv`		|
| `Export-Clixml`	|
| `Out-File`		|
| `Out-Printer`		|
| `Out-GridView`	|
| `Out-File`		|
|					|
| `ConvertTo-Csv`	|
| `ConvertTo-Html`	|

# Pipeline

**Example: you want to check if a service is running on all the computers in the AD <br />**

| Command																								| Meaning
| :---																									| :---
| `Get-ADComputer -Filter * 	| gm`																	| Check what object you are working with (in this case `ADComputer`)
| `Get-Help Get-Service -ShowWindow`																	|
| 																										| Search for `-InputObject` and see what it accepts (in this case `ServiceController` != `ADComputer`)
|																										| `-ComputerName` supports `ByPropertyName`
| `Get-ADComputer -Filter *`																			| Check for propertyname
|																										| `-Name` gives you the name of the computer

`Get-ADComputer -Filter * -Name | Select -Property @{n(ame)='ComputerName';e(xpression)={$_.name}} 	| Get-Service -Name bits`<br />

**Example: command does not accept pipeline input `Get-WmiObject`<br />**

`Get-WmiObject -class win32_bios -ComputerName (Get-ADComputer -Filter *).Name`
`Get-ADComputer -Filter * | Get-WmiObject win32_bios -Computername {$_.Name}`

# Create new property

| Command																| Meaning
| :---																	| :---
| `Select -Property @{n(ame)='ComputerName';e(xpression)={$_.name}}`	| Creates a new property called `ComputerName` from the existing property `Name`
| `Select -ExpandProperty name											| Return the property in a array

# WmiObject & CimInstance
